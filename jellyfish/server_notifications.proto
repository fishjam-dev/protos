syntax = "proto3";

package jellyfish;

message ServerMessage {
  message RoomCrashed {
    string room_id = 1;
  }

  message PeerConnected {
    string room_id = 1;
    string peer_id = 2;
  }

  message PeerDisconnected {
    string room_id = 1;
    string peer_id = 2;
  }

  message PeerCrashed {
    string room_id = 1;
    string peer_id = 2;
  }

  message ComponentCrashed {
    string room_id = 1;
    string component_id = 2;
  }

  message Authenticated {}

  message AuthRequest {
    string token = 1;
  }

  message SubscribeRequest {
    message ServerNotification {
      enum Option {
        OPTION_UNSPECIFIED = 0;
        OPTION_ALL = 1;
      }

      oneof room_id {
        string id = 1;
        Option option = 2;
      }
    }

    message Metrics {}

    string id = 1;
    oneof event_type {
      ServerNotification server_notification = 2;
      Metrics metrics = 3;
    }
  }

  message SubscribeResponse {
    message RoomState {
      message Config {
        enum Encoding {
          ENCODING_UNSPECIFIED = 0;
          ENCODING_H264 = 1;
          ENCODING_VP8 = 2;
        }

        uint32 max_peers = 1;
        Encoding enforce_encoding = 2;
      }

      message Peer {
        enum Type {
          TYPE_UNSPECIFIED = 0;
          TYPE_WEBRTC = 1;
        }

        enum Status {
          STATUS_UNSPECIFIED = 0;
          STATUS_CONNECTED = 1;
          STATUS_DISCONNECTED = 2;
        }

        string id = 1;
        Type type = 2;
        Status status = 3;
      }

      message Component {
        enum Type {
          TYPE_UNSPECIFIED = 0;
          TYPE_HLS = 1;
          TYPE_RTSP = 2;
        }

        string id = 1;
        Type type = 2;
      }

      string id = 1;
      Config config = 2;
      repeated Peer peers = 3;
      repeated Component components = 4;
    }

    message RoomsState {
      repeated RoomState rooms = 1;
    }

    message RoomNotFound {
      string id = 1;
    }

    string id = 1;
    oneof content {
      RoomState room_state = 2;
      RoomsState rooms_state = 3;
      RoomNotFound room_not_found = 4;
    }
  }

  message RoomCreated {
    string room_id = 1;
  }

  message RoomDeleted {
    string room_id = 1;
  }

  message MetricsReport {
    string metrics = 1;
  }

  oneof content {
    RoomCrashed room_crashed = 1;
    PeerConnected peer_connected = 2;
    PeerDisconnected peer_disconnected = 3;
    PeerCrashed peer_crashed = 4;
    ComponentCrashed component_crashed = 5;
    Authenticated authenticated = 6;
    AuthRequest auth_request = 7;
    SubscribeRequest subscribe_request = 8;
    SubscribeResponse subscribe_response = 9;
    RoomCreated room_created = 10;
    RoomDeleted room_deleted = 11;
    MetricsReport metrics_report = 12;
  }
}
